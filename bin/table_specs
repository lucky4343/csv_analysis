#!/bin/bash
# Date: 10/07/2018
# David Brunelle

# Globals
DATA='Please input files of .CSV format'
ARGS=$#

# Function definitions
parse_fields() {
    if [[  -d "$var""_dir" ]] ; then
	echo "Please relocate directory $var"\_dir" then try again"
    
    else
	mkdir "$var"\_dir""
	mv $var "$var"\_dir""
	mv parseCSV.pl "$var"\_dir""
	cd "$var"\_dir""

	FIELDS=$( ./parseCSV.pl -Fields $var )
	
	for value in $( seq 1 $FIELDS);
	do
	    touch "$var"\_"$value"
	done
		     
	./parseCSV.pl $var | cat > "$var"\_parsed""
    
    
	mv $var ../
	mv parseCSV.pl ../
    fi
    
}

is_file() {
    if [[ -f $var ]] ; then
	echo 0
    else
        echo 1
    fi
}

is_csv () {
    FILEN_EXTEN=$( echo $var | grep -o '....$' )
    if [[ $FILEN_EXTEN == ".csv" ]] ; then
	echo 0
    else
	echo 2
    fi
}

is_directory() {
    if [[ ! -d $var ]] ; then
	echo 0
    else
	echo 3
    fi
}
    

status_handler() {
    ARG=$@
    if [[ ARG -eq 0 ]] ; then
	#OUTPUT=$( define_output $var )
	#echo cat > $OUTPUT
	#echo $var': is a csv'

	#echo $( standardize "$var" )
	echo $( parse_fields "$var" )
    elif [[ ARG -eq 1 ]]; then
	echo $var': is not a file or does not exist within the scope of the  present directory'
    elif [[ ARG -eq 2 ]]; then
	echo $var' :is not of type .csv based on filename extension'
    elif [[ ARG -eq 3 ]] ; then
	echo $var' :is a directory'	
    fi
}

#Too many inputs
if [[ $ARGS -gt 9 ]] ; then
    echo 'Too many inputs'
fi

#No inputs 
if [[ $ARGS == 0 ]] ; then 
    echo $DATA
fi

for var in "$@" ; do

    FILE_CHECK=$( is_file $var )
    
    if [[ FILE_CHECK -eq 0 ]] ; then
	CSV_CHECK=$( is_csv $var )
	
	echo $( status_handler $CSV_CHECK )
	
    else
	DIR_CHECK=$( is_directory $var )
	if [[ $(( $DIR_CHECK && $FILE_CHECK ))  == 1 ]] ; then
	    echo $( status_handler $DIR_CHECK )
	else
	    echo $( status_handler $FILE_CHECK )
	fi
    fi

done
